-- SQL Project Using Multiple Tables
/* 
THE SITUATION
                 You and your business partner were recently approached by another local business owner who is interested in 
                 purchasing Maven Movies. He primarily owns restaurants and bars, so he has a lot of questions for you about
                 your business and the rental business in general. His offer seems very generous, so you are going to entertain
                 his questions
*/

/*
QUESTION1- My partner and i want to come by each of the stores in person and meet the managers. Please send over the manager's name at each store,
           with full address of each property(street address, district, city, and country) please.
*/

SELECT
		staff.first_name as First_Name,
        staff.last_name as Last_Name,
        address.address as Street_address,
        address.district as District,
        city.city as City,
        country.country as Country
FROM store
LEFT JOIN staff ON store.manager_staff_id = staff.staff_id
LEFT JOIN address ON store.address_id = address.address_id
LEFT JOIN city ON address.city_id = city.city_id
LEFT JOIN country ON city.country_id=country.country_id;

/*
QUESTION 2- I would like to get a better understanding of all the inventory that would come along with the business.
			Please pull together a list of each inventory item you have stocked including the store_id number the
            inventory_id number the name of the film, the film's ratings, its rental rate and replacement cost.
*/

SELECT
		inventory.store_id,
        inventory.inventory_id,
        film.title as Name,
        film.rating,
        film.rental_rate,
        film.replacement_cost
FROM inventory
LEFT JOIN film
		ON inventory.film_id=film.film_id
ORDER BY inventory.inventory_id;

/*
QUESTION 3- From the same list of films you just pulled, please roll that data up and provide a summery level overview of your inventory.
			We would like to know how many inventory items you have with each rating at each store.
*/

SELECT
		DISTINCT film.rating as RATING,
        store.store_id as STORE_ID,
        COUNT(inventory.inventory_id) as Stock
FROM film
INNER JOIN inventory
		ON film.film_id=inventory.film_id
INNER JOIN store
		ON store.store_id=inventory.store_id
GROUP BY film.rating,store.store_id;

/*
QUESTION 4- Similarly, We want to understand how diversify the inventory is in terms of replacement cost. We want to see how big of a hit it would
			be is a certain category of film became unpopular at a certain store.
            We would like to see the number of films, as well as the average replacement cost, total replacement cost, sliced by store and film category
*/

SELECT
		DISTINCT category.name as Category,
        store.store_id,
        COUNT(inventory.inventory_id) as TOTAL_FILMS,
        AVG(film.replacement_cost) as AVERAGE_REPLACEMENT_COST,
        SUM(film.replacement_cost) as TOTAL_REPLACEMENT_COST
FROM category
INNER JOIN film_category
		ON film_category.category_id=category.category_id
INNER JOIN film
		ON film.film_id=film_category.film_id
INNER JOIN inventory
		ON inventory.film_id=film.film_id
INNER JOIN store
		ON store.store_id=inventory.store_id
GROUP BY store.store_id,category.name
ORDER BY SUM(film.replacement_cost) DESC;

/*
QUESTION 5- We want to make sure you folks have a good handle on who your customers are.
			Please provide a list of all customers names, which store they go to, whether or not they are currently active, and their full address(Street address,city,Country)
*/

SELECT 
		customer.first_name as FIRST_NAME,
        customer.last_name as LAST_NAME,
        customer.store_id as STORE_ID,
        customer.active as ACTIVE_STATUS,
        address.address as STREET,
        address.district as DISTRICT,
        city.city as CITY,
        country.country as COUNTRY
FROM customer
LEFT JOIN address
		ON address.address_id = customer.address_id
LEFT JOIN city
		ON city.city_id = address.city_id
LEFT JOIN country
		ON country.country_id =city.country_id;
        
/*
QUESTION 6- We would like to get to know your board of advisors and any current investors
			Could you please provide a list of advisors and investors name in one table?
            Could you please note whether they are an investor or an advisor, and for the investors, it would be good to include which company they work with
*/

SELECT 
		'Advisor' as Type,
        advisor.first_name,
        advisor.last_name,
        Null as Company_Name
FROM advisor
UNION
SELECT
		'Investor' as Type,
        investor.first_name,
        investor.last_name,
        investor.company_name as Company_name
FROM investor;

/*
QUESTION 7-We would like to understand how much your customers are spending with you, and also to know who your most valuable customers are.
		   Please pull together a list of customer names, their total lifetime rentals, and the sum of all the payments you have collected from them.
           It would be great to see this ordered on total lifetime value, with most valualble customers at the top of the list.
*/

SELECT  
		customer.first_name,
        customer.last_name,
        COUNT(rental.rental_id) as total_rentals,
        SUM(payment.amount) as total_payment
FROM customer
LEFT JOIN rental 
		ON customer.customer_id=rental.customer_id
LEFT JOIN payment 
		ON rental.rental_id=payment.rental_id
GROUP BY 
		customer.first_name,
        customer.last_name
ORDER BY 
		SUM(payment.amount) DESC;

/*
QUESTION 8- We are interested in how well you have covered most awarded actors. Of all the actors with three types of awards, for what % of them do we carry a film?
			And how about actors with two types of awards?
            Same for actors with just one award
*/
SELECT 
		"Three Awards" as Number_of_awards,
        count(actor_award.awards) as Number,
        (count(actor_award.actor_id)/count(actor_award.awards))*100 as Perentage_of_actors_in_stock
FROM actor_award
WHERE awards='Emmy, Oscar, Tony '
UNION
SELECT 
		"Two Awards" as Number_of_awards,
        count(actor_award.awards) as Number,
        (count(actor_award.actor_id)/count(actor_award.awards))*100 as Perentage_of_actors_in_stock
FROM actor_award
WHERE awards='Emmy, Oscar' OR awards='Emmy, Tony' OR awards='Oscar, Tony'
UNION
SELECT 
		"One Award" as Number_of_awards,
        count(actor_award.awards) as Number,
        (count(actor_award.actor_id)/count(actor_award.awards))*100 as Perentage_of_actors_in_stock
FROM actor_award
WHERE awards='Oscar' OR awards='Emmy' OR awards='Tony'
